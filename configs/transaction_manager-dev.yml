server:
	port: 8770

spring:
	application:
		name: transaction-manager
# JDBC 数据库配置
	datasource:
		url: jdbc:mysql://127.0.0.1:3306/mall_tx_manager?characterEncoding=UTF-8
		password: 
# redis 的设置信息. 线上请用Redis Cluster
	redis: 
		host: 127.0.0.1
		port: 6379
		password: 

# 数据库方言
	jpa:
		database-platform: org.hibernate.dialect.MySQL5InnoDBDialect

# 第一次运行可以设置为: create, 为TM创建持久化数据库表
		hibernate:ddl-auto: validate

# TM监听IP. 默认为 127.0.0.1
tx-lcn:
	manager:
		host: 127.0.0.1

# TM监听Socket端口. 默认为 ${server.port} - 100
		port: 8771

# 心跳检测时间(ms). 默认为 300000
		heart-time: 300000

# 分布式事务执行总时间(ms). 默认为36000
		dtx-time: 8000

# 事务处理并发等级. 默认为机器逻辑核心数5倍
		concurrent-level: 160

# TM后台登陆密码，默认值为codingapi
		admin-key: codingapi

# 分布式事务锁超时时间 默认为-1，当-1时会用tx-lcn: manager.dtx-time的时间
		dtx-lock-time: ${tx-lcn.manager.dtx-time}

# 雪花算法的sequence位长度，默认为12位.
		seq-len: 12

# 异常回调开关。开启时请制定ex-url
		ex-url-enabled: false

# 事务异常通知（任何http协议地址。未指定协议时，为TM提供内置功能接口）。默认是邮件通知
		ex-url: /provider/email-to/***@**.com

# 参数延迟删除时间单位ms  默认为dtx-time值
	message:
		netty: 
			attr-delay-time: ${tx-lcn.manager.dtx-time}



# 开启日志,默认为false
tx-lcn: 
	logger: 
		enabled: true
		driver-class-name: ${spring.datasource.driver-class-name}
		jdbc-url: ${spring.datasource.url}
		username: ${spring.datasource.username}
		password: ${spring.datasource.password}

